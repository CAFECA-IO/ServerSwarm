services:
  nginx:
    image: nginx:1.26.2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - isunfa
      - faith
      - aich
    deploy:
      resources:
        limits:
          memory: 256M

  isunfa:
    image: node:20
    volumes:
      - ./isunfa:/isunfa
    command: >
      sh -c "chmod +x /isunfa/isunfa-start.sh && /isunfa/isunfa-start.sh"
    env_file:
      - ./isunfa/.env.isunfa
    environment:
      - PORT=${ISUNFA_PORT}
    expose:
      - "${ISUNFA_PORT}"
    depends_on:
     - aich
     - postgres
    deploy:
      resources:
        limits:
          memory: 2G

  faith:
    image: node:20
    volumes:
      - ./faith:/faith
    command: >
      sh -c "chmod +x /faith/faith-start.sh && /faith/faith-start.sh"
    env_file:
      - ./faith/.env.faith
    environment:
      - PORT=${FAITH_PORT}
    expose:
      - "${FAITH_PORT}"
    depends_on:
      - aich
      - ollama
      - qdrant
    deploy:
      resources:
        limits:
          memory: 1G
  
  aich:
    image: node:20
    volumes:
      - ./aich:/aich
    command: >
      sh -c "chmod +x /aich/aich-start.sh && /aich/aich-start.sh"
    env_file:
      - ./aich/.env.aich
    environment:
      - PORT=${AICH_PORT}
    expose:
      - "${AICH_PORT}"
    depends_on:
      - ollama
      - qdrant
    deploy:
      resources:
        limits:
          memory: 2G
  
  ollama:
    image: ollama/ollama:0.3.6
    volumes:
      - ./ollama:/root/.ollama
    restart: always
    # Info (20240822 - Jacky): Uncomment the following lines to enable GPU support.
    
    deploy:
      resources:
        limits:
            memory: 17G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    expose:
      - "${OLLAMA_PORT}"
    env_file:
      - ./ollama/.env.ollama
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "chmod +x /root/.ollama/ollama-start.sh && /root/.ollama/ollama-start.sh"
  
  qdrant:
    image: qdrant/qdrant:v1.11.0
    restart: always
    expose:
      - "${QDRANT_PORT}"
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant/qdrant_data:/qdrant/storage
    deploy:
      resources:
        limits:
          memory: 1G
  
  postgres:
    image: postgres:16
    restart: always
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: example
    expose:
      - "${POSTGRES_PORT}"
    deploy:
      resources:
        limits:
          memory: 1G

configs:
  qdrant_config:
    content: |
      log_level: INFO
